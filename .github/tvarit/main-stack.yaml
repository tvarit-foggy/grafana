AWSTemplateFormatVersion: "2010-09-09"
Description: Grafana Stack

Resources:
  DataLakeArtifactS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: com.tvarit.grafana.artifacts
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - Id: AbortIncompleteMultipartUpload
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
            Status: Enabled
      VersioningConfiguration:
        Status: Enabled

  GrafanaUser:
    Type: AWS::IAM::User
    Properties:
      UserName: GrafanaUser
      Path: "/"
      Policies:
        - PolicyName: GrafanaUserPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:Get*"
                  - "s3:List*"
                  - "s3:Put*"
                Resource: "*"

  GrafanaUserKey:
    Type: AWS::IAM::AccessKey
    Properties:
      Serial: 1
      Status: Active
      UserName: GrafanaUser
    DependsOn:
      - GrafanaUser

  SSMGrafanaUserAccessKey:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: GrafanaUser Access Key
      Name: /credentials/grafana-user/access-key
      SecretString: !Ref GrafanaUserKey
    DependsOn:
      - GrafanaUserKey

  SSMGrafanaUserSecretKey:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: GrafanaUser Secret Key
      Name: /credentials/grafana-user/secret-key
      SecretString: !GetAtt GrafanaUserKey.SecretAccessKey
    DependsOn:
      - GrafanaUserKey

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: tia-cognito-user-pool
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
        InviteMessageTemplate:
          EmailSubject: "Your credentials for Tvarit AI Platform"
          EmailMessage: "Your username is {username} and your temporary password is {####}. Please log in to the platform and reset your password and MFA."
          SMSMessage: "Your username is {username} and your temporary password is {####} for Tvarit Industrial AI."
      AutoVerifiedAttributes:
        - email
      DeviceConfiguration:
        ChallengeRequiredOnNewDevice: true
        DeviceOnlyRememberedOnUserPrompt: true
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
        ReplyToEmailAddress: support@tvarit.com
        SourceArn: "arn:aws:ses:eu-central-1:250373516626:identity/no-reply@tvarit.com"
      EnabledMfas:
        - SOFTWARE_TOKEN_MFA
      #  - SMS_MFA
      #LambdaConfig:
      #  CustomEmailSender:
      #    CustomEmailSender
      #  CustomMessage: String
      #  CustomSMSSender:
      #    CustomSMSSender
      #  KMSKeyID: String
      #  PostAuthentication: String
      #  PostConfirmation: String
      #  PreAuthentication: String
      #  PreSignUp: String
      #  PreTokenGeneration: String
      #  UserMigration: String
      MfaConfiguration: 'ON'
      Policies:
        PasswordPolicy:
          MinimumLength: 12
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 1
      Schema:
        - Name: email
          Required: true
          Mutable: false
        - Name: name
          Required: true
          Mutable: true
      #SmsAuthenticationMessage
      #SmsConfiguration
      #UserAttributeUpdateSettings
      UsernameAttributes:
        - email
      UserPoolAddOns:
        AdvancedSecurityMode: AUDIT
      #UserPoolTags
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: "Your verification code is {####}."
        EmailMessageByLink: "Please click the link below to verify your email address. {##Verify Email##}."
        EmailSubject: "Your verification code for Tvarit Industrial AI"
        EmailSubjectByLink: "Your verification link for Tvarit Industrial AI"
        SmsMessage: "Your verification code is {####}."

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: tia-cognito-client
      UserPoolId: !Ref UserPool
      #AccessTokenValidity
      AllowedOAuthFlows:
        - 'implicit'
        - 'code'
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - 'openid'
        - 'profile'
        - 'phone'
        - 'email'
        - 'aws.cognito.signin.user.admin'
      #AnalyticsConfiguration
      #AuthSessionValidity
      CallbackURLs:
        - 'http://localhost:3000/login/generic_oauth'
        - 'https://cloud.tvarit.com/login/generic_oauth'
        - 'https://next-cloud.tvarit.com/login/generic_oauth'
        - 'https://maxion.tvarit.com/login/generic_oauth'
        - 'https://next-maxion.tvarit.com/login/generic_oauth'
      #EnablePropagateAdditionalUserContextData
      #EnableTokenRevocation
      ExplicitAuthFlows:
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
      GenerateSecret: true
      #IdTokenValidity
      LogoutURLs:
        - 'http://localhost:3000/login/generic_oauth'
        - 'https://cloud.tvarit.com/login/generic_oauth'
        - 'https://next-cloud.tvarit.com/login/generic_oauth'
        - 'https://maxion.tvarit.com/login/generic_oauth'
        - 'https://next-maxion.tvarit.com/login/generic_oauth'
      PreventUserExistenceErrors: ENABLED
      #ReadAttributes
      #RefreshTokenValidity
      SupportedIdentityProviders:
        - COGNITO
      #WriteAttributes

  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      UserPoolId: !Ref UserPool
      Domain: auth.tvarit.com
      CustomDomainConfig:
        CertificateArn: "arn:aws:acm:us-east-1:250373516626:certificate/08cf2fdd-8954-402a-8610-198abc88b1d6"
